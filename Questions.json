{"questions": [
  {
    "difficulty": "4",
    "question": "test",
    "answers": [
      "test2",
      "test3",
      "test4",
      "tes5"
    ],
    "correct_ans": "3"
  },
  {
    "difficulty": "2",
    "question": "What is the primary goal of continuous integration in Agile testing?",
    "answers": [
      "To integrate code changes frequently to detect errors early",
      "To delay integration until all features are developed",
      "1 + 2",
      "None of the above."
    ],
    "correct_ans": "1"
  },
  {
    "difficulty": "2",
    "question": "A system\u2019s descriptive architecture describes:",
    "answers": [
      "programming language of the system",
      "system design",
      "how the system has been built",
      "None."
    ],
    "correct_ans": "3"
  },
  {
    "difficulty": "2",
    "question": "What is the primary output of the software development process in MDE ?",
    "answers": [
      "model",
      "Programs",
      "Code Comments",
      "None"
    ],
    "correct_ans": "1"
  },
  {
    "difficulty": "2",
    "question": "What is the relationship between (MDA) and (MDE)?",
    "answers": [
      " Model-driven engineering is a subset of MDA",
      "Model-driven engineering preceded MDA",
      "They are unrelated concepts",
      "None of the above"
    ],
    "correct_ans": "1"
  },
  {
    "difficulty": "2",
    "question": "How does MDA differ from traditional software development approaches?",
    "answers": [
      " MDA relies solely on manual coding",
      " MDA does not involve the use of UML model",
      "Does not differ.",
      "MDA focuses on generating code directly from model"
    ],
    "correct_ans": "4"
  },
  {
    "difficulty": "2",
    "question": "What is the purpose of a software test strategy?",
    "answers": [
      "To manage project timelines and resources",
      "To systematically select or generate tests",
      "To systematically select or generate tests",
      "None of the above"
    ],
    "correct_ans": "2"
  },
  {
    "difficulty": "2",
    "question": "How does a software test strategy determine its effectiveness?",
    "answers": [
      "By the number of bugs found during testing",
      "By the frequency of software updates",
      "By the complexity of the test cases",
      "None of the above"
    ],
    "correct_ans": "1"
  },
  {
    "difficulty": "2",
    "question": "What does a hybrid test strategy entail?",
    "answers": [
      "Combining both black-box and white-box testing techniques",
      "Ignoring testing altogether in favor of code reviews",
      "Testing only the user interface of the software",
      "Employing only manual testing methods"
    ],
    "correct_ans": "1"
  },
  {
    "difficulty": "2",
    "question": "What is the primary purpose of activity diagrams in software design?",
    "answers": [
      " To illustrate the activities involved in a process or data processing",
      " To show interactions between actors and the system",
      " To depict the object classes in the system",
      "None."
    ],
    "correct_ans": "1"
  },
  {
    "difficulty": "3",
    "question": "When would you typically use a use case diagram in software development?",
    "answers": [
      " To show the interactions between a system and its environment",
      "To show interactions between system components",
      "To depict the object classes in the system",
      "None."
    ],
    "correct_ans": "1"
  },
  {
    "difficulty": "2",
    "question": "In class diagrams, what do associations between classes represent?",
    "answers": [
      "Relationships between object classes in the system",
      " Reactions to internal and external events",
      "Interactions between system components",
      "None."
    ],
    "correct_ans": "1"
  },
  {
    "difficulty": "2",
    "question": "What is the primary objective of validation testing?",
    "answers": [
      "To expose defects in the system",
      "To ensure the system performs correctly with expected use",
      "To deliberately obscure test cases",
      "None"
    ],
    "correct_ans": "2"
  },
  {
    "difficulty": "3",
    "question": "When would you typically use a use case diagram in software development?",
    "answers": [
      " To show the interactions between a system and its environment",
      "To show interactions between system components",
      "To depict the object classes in the system",
      "None."
    ],
    "correct_ans": "1"
  },
  {
    "difficulty": "3",
    "question": "When would you typically use a use case diagram in software development?",
    "answers": [
      " To show the interactions between a system and its environment",
      "To show interactions between system components",
      "To depict the object classes in the system",
      "None."
    ],
    "correct_ans": "1"
  },
  {
    "difficulty": "2",
    "question": "When would you typically use a use case diagram in software development?",
    "answers": [
      " To show the interactions between a system and its environment",
      "To show interactions between system components",
      "To depict the object classes in the system",
      "None."
    ],
    "correct_ans": "1"
  },
  {
    "difficulty": "0",
    "question": "A Common pratice ni Agile architecture design to ensure adaptability:",
    "answers": [
      "Creating extensive documentation upfront",
      " Iterative and incremental design",
      "Avoiding refactoring",
      "None of the above"
    ],
    "correct_ans": "2"
  }
]}